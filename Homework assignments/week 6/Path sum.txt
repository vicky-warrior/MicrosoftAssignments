class Solution {
public boolean hasPathSum(TreeNode root, int targetSum) {

    return check(root,targetSum,0);
}
static boolean check(TreeNode t,int target, int sum)
{
    if(t == null) //if there is no element in linked list, it is not possible to make target sum
    {
        return false;
    }
    sum+=t.val; //adding to sum while moving forward in recursion
    if(t.left==null && t.right==null && sum==target) return true;
    else
    {
        
        return check(t.left,target,sum) || check(t.right,target,sum);
        // if any branch makes the target sum we return true else false;
    }
}
}